<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dmz.basic.mapper.LoginMapper" >
  <resultMap id="BaseResultMap" type="com.dmz.basic.model.Login" >

    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_no" property="userNo" jdbcType="CHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="platform" property="platform" jdbcType="INTEGER" />
    <result column="has_passwd" property="hasPasswd" jdbcType="INTEGER" />
    <result column="pwd_strength" property="pwdStrength" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="BaseColumnList">
    id, user_no, login_name, passwd, platform, has_passwd, pwd_strength,
    status, is_delete,
    create_time, update_time
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >

    delete from dmz_login
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dmz.basic.model.Login" useGeneratedKeys="true" keyProperty="id" >

    insert into dmz_login (user_no, login_name, passwd, 
      platform, has_passwd, pwd_strength, 
      status, is_delete, create_time, 
      update_time)
    values (#{userNo,jdbcType=CHAR}, #{loginName,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{platform,jdbcType=INTEGER}, #{hasPasswd,jdbcType=INTEGER}, #{pwdStrength,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dmz.basic.model.Login" >

    update dmz_login
    set user_no = #{userNo,jdbcType=CHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=INTEGER},
      has_passwd = #{hasPasswd,jdbcType=INTEGER},
      pwd_strength = #{pwdStrength,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >

    select id, user_no, login_name, passwd, platform, has_passwd, pwd_strength, status, 
    is_delete, create_time, update_time
    from dmz_login
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >

    select id, user_no, login_name, passwd, platform, has_passwd, pwd_strength, status,
    is_delete, create_time, update_time
    from dmz_login
  </select>

  <select id="selectLoginByLogin" resultMap="BaseResultMap" parameterType="com.dmz.basic.model.Login">
    SELECT
    <include refid="BaseColumnList" />
    FROM dmz_login
    <where>
      <if test="userNo != null">
        AND user_no = #{userNo,jdbcType=CHAR}
      </if>
      <if test="loginName != null">
        AND login_name = #{loginName,jdbcType=VARCHAR}
      </if>
      <if test="passwd != null">
        AND passwd = #{passwd,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
</mapper>